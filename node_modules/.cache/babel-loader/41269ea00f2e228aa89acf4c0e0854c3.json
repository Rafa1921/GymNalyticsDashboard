{"ast":null,"code":"var _jsxFileName = \"/Users/gela/Downloads/Gym dashboard analytics/src/components/Table/Table.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport Modal from \"@mui/material/Modal\";\nimport { v4 as uuidv4 } from \"uuid\"; // Import uuid\n\nimport dumbbellImage from \"../assets/dumbbell.png\";\nimport barImage from \"../assets/bar.png\";\nimport \"./Table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst makeStyle = status => {\n  if (status === \"Approved\") {\n    return {\n      background: \"rgb(145 254 159 / 47%)\",\n      color: \"green\"\n    };\n  } else if (status === \"Pending\") {\n    return {\n      background: \"#ffadad8f\",\n      color: \"red\"\n    };\n  } else {\n    return {\n      background: \"#59bfff\",\n      color: \"white\"\n    };\n  }\n};\n\nconst descriptions = {\n  Dumbbells: \"A dumbbell is a versatile piece of fitness equipment consisting of a short bar with weights attached at each end. These weights can be adjusted to vary the resistance for different exercises. Dumbbells come in various shapes, sizes, and materials, ranging from traditional iron or steel to more modern designs featuring rubber-coated ends for better grip and protection. They are commonly used for strength training and muscle building, offering a wide range of exercises targeting different muscle groups.\",\n  \"Gym Bar\": \"On the other hand, a gym bar, often referred to as a barbell, is a long, straight bar typically used for heavy lifting exercises such as squats, deadlifts, and bench presses. It usually has weights attached at both ends, known as weight plates, which can be customized to adjust the overall resistance. Gym bars come in different lengths and thicknesses, catering to various lifting preferences and body sizes. They are a staple in weightlifting and powerlifting routines, providing stability and balance during compound exercises that engage multiple muscle groups simultaneously.\"\n};\n\nconst BasicTable = _ref => {\n  _s();\n\n  let {\n    handleUpdateOrder,\n    handleDeleteOrder\n  } = _ref;\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newImageUrl, setNewImageUrl] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [description, setDescription] = useState(\"\");\n  const [productName, setProductName] = useState(\"\");\n  const [rows, setRows] = useState([{\n    id: uuidv4(),\n    // Generate unique ID for each row\n    name: \"Dumbbells\",\n    trackingId: 12345,\n    date: \"2024-05-26\",\n    status: \"Approved\",\n    imageUrl: dumbbellImage\n  }, {\n    id: uuidv4(),\n    name: \"Gym Bar\",\n    trackingId: 67890,\n    date: \"2024-05-25\",\n    status: \"Pending\",\n    imageUrl: barImage\n  }]);\n\n  const handleRowClick = (name, imageUrl) => {\n    setSelectedRow(name);\n    setImageUrl(imageUrl);\n    setNewImageUrl(\"\"); // Reset new image URL\n\n    setDescription(descriptions[name]);\n    setModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n\n    if (file && newImageUrl) {\n      handleUpdate();\n    }\n  };\n\n  const handleUpdate = () => {\n    if (file) {\n      const updatedRows = rows.map(row => {\n        if (row.name === selectedRow) {\n          return { ...row,\n            imageUrl: newImageUrl || imageUrl,\n            description: description,\n            name: productName || row.name\n          };\n        }\n\n        return row;\n      });\n      setRows(updatedRows);\n      console.log(\"Image updated:\", newImageUrl || imageUrl); // Log the updated image URL\n\n      setFile(null); // Reset file state\n\n      setNewImageUrl(\"\"); // Reset new image URL\n\n      setDescription(\"\"); // Reset description\n\n      setProductName(\"\"); // Reset product name\n\n      setModalOpen(false); // Close the modal after updating\n    } else {\n      // Prompt user to select a file\n      const input = document.createElement(\"input\");\n      input.type = \"file\";\n      input.accept = \"image/*\";\n\n      input.onchange = e => {\n        const selectedFile = e.target.files[0];\n        const reader = new FileReader();\n\n        reader.onload = e => {\n          setNewImageUrl(e.target.result);\n          setFile(selectedFile);\n        };\n\n        reader.readAsDataURL(selectedFile);\n      };\n\n      input.click();\n    }\n  };\n\n  const handleDelete = id => {\n    // Pass id as parameter\n    const updatedRows = rows.filter(row => row.id !== id); // Use id for filtering\n\n    console.log(\"Deleted:\", id); // Log the deleted row\n\n    setRows(updatedRows);\n    setSelectedRow(null);\n    setModalOpen(false);\n  };\n\n  const handleCreateOrder = () => {\n    setRows([...rows, {\n      id: uuidv4(),\n      // Generate unique ID for the new row\n      name: \"New Product\",\n      // Default name for new product\n      trackingId: 0,\n      // Default trackingId for new product\n      date: new Date().toISOString().slice(0, 10),\n      // Current date\n      status: \"Pending\",\n      // Default status for new product\n      imageUrl: \"\" // No default image URL\n\n    }]);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recent Gym Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateOrder,\n      children: \"Create Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        boxShadow: \"0px 13px 20px 0px #80808029\",\n        maxHeight: \"400px\",\n        overflowY: \"scroll\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: \"Tracking ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          style: {\n            color: \"white\"\n          },\n          children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            // Use id as the key\n            sx: {\n              \"&:last-child td, &:last-child th\": {\n                border: 0\n              },\n              cursor: \"pointer\",\n              backgroundColor: selectedRow === row.name ? \"lightgray\" : \"inherit\"\n            },\n            onClick: () => handleRowClick(row.name, row.imageUrl),\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.trackingId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status\",\n                style: makeStyle(row.status),\n                children: row.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      onClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Modal\",\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedRow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: newImageUrl || imageUrl,\n          alt: selectedRow,\n          style: {\n            maxWidth: \"100%\",\n            maxHeight: \"100%\",\n            margin: \"auto\",\n            display: \"block\",\n            border: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            color: \"black\",\n            fontSize: 20,\n            maxWidth: \"80%\",\n            margin: \"0 auto\"\n          },\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdate,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDelete(selectedRow),\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicTable, \"LwDkqa2gNP6tHMwYcqenid6ivnQ=\");\n\n_c = BasicTable;\nexport default BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/Users/gela/Downloads/Gym dashboard analytics/src/components/Table/Table.jsx"],"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Modal","v4","uuidv4","dumbbellImage","barImage","makeStyle","status","background","color","descriptions","Dumbbells","BasicTable","handleUpdateOrder","handleDeleteOrder","selectedRow","setSelectedRow","imageUrl","setImageUrl","modalOpen","setModalOpen","newImageUrl","setNewImageUrl","file","setFile","description","setDescription","productName","setProductName","rows","setRows","id","name","trackingId","date","handleRowClick","handleCloseModal","handleUpdate","updatedRows","map","row","console","log","input","document","createElement","type","accept","onchange","e","selectedFile","target","files","reader","FileReader","onload","result","readAsDataURL","click","handleDelete","filter","handleCreateOrder","Date","toISOString","slice","boxShadow","maxHeight","overflowY","minWidth","border","cursor","backgroundColor","textAlign","maxWidth","margin","display","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport Modal from \"@mui/material/Modal\";\nimport { v4 as uuidv4 } from \"uuid\"; // Import uuid\nimport dumbbellImage from \"../assets/dumbbell.png\";\nimport barImage from \"../assets/bar.png\";\nimport \"./Table.css\";\n\nconst makeStyle = (status) => {\n  if (status === \"Approved\") {\n    return {\n      background: \"rgb(145 254 159 / 47%)\",\n      color: \"green\",\n    };\n  } else if (status === \"Pending\") {\n    return {\n      background: \"#ffadad8f\",\n      color: \"red\",\n    };\n  } else {\n    return {\n      background: \"#59bfff\",\n      color: \"white\",\n    };\n  }\n};\n\nconst descriptions = {\n  Dumbbells:\n    \"A dumbbell is a versatile piece of fitness equipment consisting of a short bar with weights attached at each end. These weights can be adjusted to vary the resistance for different exercises. Dumbbells come in various shapes, sizes, and materials, ranging from traditional iron or steel to more modern designs featuring rubber-coated ends for better grip and protection. They are commonly used for strength training and muscle building, offering a wide range of exercises targeting different muscle groups.\",\n  \"Gym Bar\":\n    \"On the other hand, a gym bar, often referred to as a barbell, is a long, straight bar typically used for heavy lifting exercises such as squats, deadlifts, and bench presses. It usually has weights attached at both ends, known as weight plates, which can be customized to adjust the overall resistance. Gym bars come in different lengths and thicknesses, catering to various lifting preferences and body sizes. They are a staple in weightlifting and powerlifting routines, providing stability and balance during compound exercises that engage multiple muscle groups simultaneously.\",\n};\n\nconst BasicTable = ({ handleUpdateOrder, handleDeleteOrder }) => {\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newImageUrl, setNewImageUrl] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [description, setDescription] = useState(\"\");\n  const [productName, setProductName] = useState(\"\");\n  const [rows, setRows] = useState([\n    {\n      id: uuidv4(), // Generate unique ID for each row\n      name: \"Dumbbells\",\n      trackingId: 12345,\n      date: \"2024-05-26\",\n      status: \"Approved\",\n      imageUrl: dumbbellImage,\n    },\n    {\n      id: uuidv4(),\n      name: \"Gym Bar\",\n      trackingId: 67890,\n      date: \"2024-05-25\",\n      status: \"Pending\",\n      imageUrl: barImage,\n    },\n  ]);\n\n  const handleRowClick = (name, imageUrl) => {\n    setSelectedRow(name);\n    setImageUrl(imageUrl);\n    setNewImageUrl(\"\"); // Reset new image URL\n    setDescription(descriptions[name]);\n    setModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    if (file && newImageUrl) {\n      handleUpdate();\n    }\n  };\n\n  const handleUpdate = () => {\n    if (file) {\n      const updatedRows = rows.map((row) => {\n        if (row.name === selectedRow) {\n          return {\n            ...row,\n            imageUrl: newImageUrl || imageUrl,\n            description: description,\n            name: productName || row.name,\n          };\n        }\n        return row;\n      });\n      setRows(updatedRows);\n      console.log(\"Image updated:\", newImageUrl || imageUrl); // Log the updated image URL\n      setFile(null); // Reset file state\n      setNewImageUrl(\"\"); // Reset new image URL\n      setDescription(\"\"); // Reset description\n      setProductName(\"\"); // Reset product name\n      setModalOpen(false); // Close the modal after updating\n    } else {\n      // Prompt user to select a file\n      const input = document.createElement(\"input\");\n      input.type = \"file\";\n      input.accept = \"image/*\";\n      input.onchange = (e) => {\n        const selectedFile = e.target.files[0];\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          setNewImageUrl(e.target.result);\n          setFile(selectedFile);\n        };\n        reader.readAsDataURL(selectedFile);\n      };\n      input.click();\n    }\n  };\n\n  const handleDelete = (id) => {\n    // Pass id as parameter\n    const updatedRows = rows.filter((row) => row.id !== id); // Use id for filtering\n    console.log(\"Deleted:\", id); // Log the deleted row\n    setRows(updatedRows);\n    setSelectedRow(null);\n    setModalOpen(false);\n  };\n\n  const handleCreateOrder = () => {\n    setRows([\n      ...rows,\n      {\n        id: uuidv4(), // Generate unique ID for the new row\n        name: \"New Product\", // Default name for new product\n        trackingId: 0, // Default trackingId for new product\n        date: new Date().toISOString().slice(0, 10), // Current date\n        status: \"Pending\", // Default status for new product\n        imageUrl: \"\", // No default image URL\n      },\n    ]);\n  };\n\n  return (\n    <div className=\"Table\">\n      <h3>Recent Gym Orders</h3>\n      <button onClick={handleCreateOrder}>Create Order</button>\n      <TableContainer\n        component={Paper}\n        style={{\n          boxShadow: \"0px 13px 20px 0px #80808029\",\n          maxHeight: \"400px\",\n          overflowY: \"scroll\",\n        }}\n      >\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Product</TableCell>\n              <TableCell align=\"left\">Tracking ID</TableCell>\n              <TableCell align=\"left\">Date</TableCell>\n              <TableCell align=\"left\">Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody style={{ color: \"white\" }}>\n            {rows.map((row) => (\n              <TableRow\n                key={row.id} // Use id as the key\n                sx={{\n                  \"&:last-child td, &:last-child th\": { border: 0 },\n                  cursor: \"pointer\",\n                  backgroundColor:\n                    selectedRow === row.name ? \"lightgray\" : \"inherit\",\n                }}\n                onClick={() => handleRowClick(row.name, row.imageUrl)}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.trackingId}</TableCell>\n                <TableCell align=\"left\">{row.date}</TableCell>\n                <TableCell align=\"left\">\n                  <span className=\"status\" style={makeStyle(row.status)}>\n                    {row.status}\n                  </span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Modal open={modalOpen} onClose={handleCloseModal}>\n        <div className=\"Modal\" style={{ textAlign: \"center\" }}>\n          <h3>{selectedRow}</h3>\n          <img\n            src={newImageUrl || imageUrl}\n            alt={selectedRow}\n            style={{\n              maxWidth: \"100%\",\n              maxHeight: \"100%\",\n              margin: \"auto\",\n              display: \"block\",\n              border: \"none\",\n            }}\n          />\n          <p\n            style={{\n              color: \"black\",\n              fontSize: 20,\n              maxWidth: \"80%\",\n              margin: \"0 auto\",\n            }}\n          >\n            {description}\n          </p>\n          <button onClick={handleUpdate}>Update</button>\n          <button onClick={() => handleDelete(selectedRow)}>Delete</button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default BasicTable;\n"]},"metadata":{},"sourceType":"module"}