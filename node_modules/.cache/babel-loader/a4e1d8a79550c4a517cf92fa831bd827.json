{"ast":null,"code":"var _jsxFileName = \"/Users/gela/Downloads/Gym dashboard analytics/src/components/Table/Table.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport Modal from \"@mui/material/Modal\";\nimport dumbbellImage from \"../assets/dumbbell.png\";\nimport barImage from \"../assets/bar.png\";\nimport \"./Table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst makeStyle = status => {\n  if (status === \"Approved\") {\n    return {\n      background: \"rgb(145 254 159 / 47%)\",\n      color: \"green\"\n    };\n  } else if (status === \"Pending\") {\n    return {\n      background: \"#ffadad8f\",\n      color: \"red\"\n    };\n  } else {\n    return {\n      background: \"#59bfff\",\n      color: \"white\"\n    };\n  }\n};\n\nconst descriptions = {\n  Dumbbells: \"Dumbbells are versatile fitness tools that can be used for a wide range of exercises targeting various muscle groups.\",\n  \"Gym Bar\": \"A gym bar, also known as a weightlifting bar or barbell, is used for performing compound exercises like squats, deadlifts, and bench presses.\"\n};\n\nconst BasicTable = _ref => {\n  _s();\n\n  let {\n    handleUpdateOrder,\n    handleDeleteOrder\n  } = _ref;\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const [file] = useState(null);\n  const [description, setDescription] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [rows, setRows] = useState([{\n    name: \"Dumbbells\",\n    trackingId: 12345,\n    date: \"2024-05-26\",\n    status: \"Approved\",\n    imageUrl: dumbbellImage,\n    description: descriptions[\"Dumbbells\"]\n  }, {\n    name: \"Gym Bar\",\n    trackingId: 67890,\n    date: \"2024-05-25\",\n    status: \"Pending\",\n    imageUrl: barImage,\n    description: descriptions[\"Gym Bar\"]\n  }]);\n\n  const handleRowClick = (name, imageUrl) => {\n    setSelectedRow(name);\n    setImageUrl(imageUrl);\n    setDescription(descriptions[name]);\n    setNewDescription(descriptions[name]); // Reset new description\n\n    setModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    if (newDescription && newDescription !== description) {\n      const updatedRows = rows.map(row => {\n        if (row.name === selectedRow) {\n          return { ...row,\n            description: newDescription\n          };\n        }\n\n        return row;\n      });\n      setRows(updatedRows);\n      console.log(\"Description updated:\", newDescription);\n    }\n\n    setModalOpen(false);\n  };\n\n  const handleUpdate = () => {\n    if (file) {// Handle image update\n    } else {\n      // Handle description update\n      setNewDescription(description);\n    }\n  };\n\n  const handleDelete = () => {\n    // Implement delete functionality here\n    console.log(\"Delete button clicked\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recent Gym Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        boxShadow: \"0px 13px 20px 0px #80808029\",\n        maxHeight: \"400px\",\n        overflowY: \"scroll\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: \"Tracking ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          style: {\n            color: \"white\"\n          },\n          children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              \"&:last-child td, &:last-child th\": {\n                border: 0\n              },\n              cursor: \"pointer\",\n              backgroundColor: selectedRow === row.name ? \"lightgray\" : \"inherit\"\n            },\n            onClick: () => handleRowClick(row.name, row.imageUrl),\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.trackingId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status\",\n                style: makeStyle(row.status),\n                children: row.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, this)]\n          }, row.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      onClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Modal\",\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedRow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imageUrl,\n          alt: selectedRow,\n          style: {\n            maxWidth: \"100%\",\n            maxHeight: \"100%\",\n            margin: \"auto\",\n            display: \"block\",\n            border: \"none\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: newDescription || description,\n          onChange: e => setNewDescription(e.target.value),\n          rows: 4,\n          style: {\n            width: \"100%\",\n            marginTop: 10\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleUpdate,\n          children: \"Update\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: handleDelete,\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 106,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicTable, \"rujd6GNnV35S9Lxj9sokOW5FTow=\");\n\n_c = BasicTable;\nexport default BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/Users/gela/Downloads/Gym dashboard analytics/src/components/Table/Table.jsx"],"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Modal","dumbbellImage","barImage","makeStyle","status","background","color","descriptions","Dumbbells","BasicTable","handleUpdateOrder","handleDeleteOrder","selectedRow","setSelectedRow","imageUrl","setImageUrl","modalOpen","setModalOpen","file","description","setDescription","newDescription","setNewDescription","rows","setRows","name","trackingId","date","handleRowClick","handleCloseModal","updatedRows","map","row","console","log","handleUpdate","handleDelete","boxShadow","maxHeight","overflowY","minWidth","border","cursor","backgroundColor","textAlign","maxWidth","margin","display","e","target","value","width","marginTop"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport Modal from \"@mui/material/Modal\";\nimport dumbbellImage from \"../assets/dumbbell.png\";\nimport barImage from \"../assets/bar.png\";\nimport \"./Table.css\";\n\nconst makeStyle = (status) => {\n  if (status === \"Approved\") {\n    return {\n      background: \"rgb(145 254 159 / 47%)\",\n      color: \"green\",\n    };\n  } else if (status === \"Pending\") {\n    return {\n      background: \"#ffadad8f\",\n      color: \"red\",\n    };\n  } else {\n    return {\n      background: \"#59bfff\",\n      color: \"white\",\n    };\n  }\n};\n\nconst descriptions = {\n  Dumbbells:\n    \"Dumbbells are versatile fitness tools that can be used for a wide range of exercises targeting various muscle groups.\",\n  \"Gym Bar\":\n    \"A gym bar, also known as a weightlifting bar or barbell, is used for performing compound exercises like squats, deadlifts, and bench presses.\",\n};\n\nconst BasicTable = ({ handleUpdateOrder, handleDeleteOrder }) => {\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const [file] = useState(null);\n  const [description, setDescription] = useState(\"\");\n  const [newDescription, setNewDescription] = useState(\"\");\n  const [rows, setRows] = useState([\n    {\n      name: \"Dumbbells\",\n      trackingId: 12345,\n      date: \"2024-05-26\",\n      status: \"Approved\",\n      imageUrl: dumbbellImage,\n      description: descriptions[\"Dumbbells\"],\n    },\n    {\n      name: \"Gym Bar\",\n      trackingId: 67890,\n      date: \"2024-05-25\",\n      status: \"Pending\",\n      imageUrl: barImage,\n      description: descriptions[\"Gym Bar\"],\n    },\n  ]);\n\n  const handleRowClick = (name, imageUrl) => {\n    setSelectedRow(name);\n    setImageUrl(imageUrl);\n    setDescription(descriptions[name]);\n    setNewDescription(descriptions[name]); // Reset new description\n    setModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    if (newDescription && newDescription !== description) {\n      const updatedRows = rows.map((row) => {\n        if (row.name === selectedRow) {\n          return {\n            ...row,\n            description: newDescription,\n          };\n        }\n        return row;\n      });\n      setRows(updatedRows);\n      console.log(\"Description updated:\", newDescription);\n    }\n    setModalOpen(false);\n  };\n\n  const handleUpdate = () => {\n    if (file) {\n      // Handle image update\n    } else {\n      // Handle description update\n      setNewDescription(description);\n    }\n  };\n\n  const handleDelete = () => {\n    // Implement delete functionality here\n    console.log(\"Delete button clicked\");\n  };\n\n  return (\n    <div className=\"Table\">\n      <h3>Recent Gym Orders</h3>\n      <TableContainer\n        component={Paper}\n        style={{\n          boxShadow: \"0px 13px 20px 0px #80808029\",\n          maxHeight: \"400px\",\n          overflowY: \"scroll\",\n        }}\n      >\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Product</TableCell>\n              <TableCell align=\"left\">Tracking ID</TableCell>\n              <TableCell align=\"left\">Date</TableCell>\n              <TableCell align=\"left\">Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody style={{ color: \"white\" }}>\n            {rows.map((row) => (\n              <TableRow\n                key={row.name}\n                sx={{\n                  \"&:last-child td, &:last-child th\": { border: 0 },\n                  cursor: \"pointer\",\n                  backgroundColor:\n                    selectedRow === row.name ? \"lightgray\" : \"inherit\",\n                }}\n                onClick={() => handleRowClick(row.name, row.imageUrl)}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.trackingId}</TableCell>\n                <TableCell align=\"left\">{row.date}</TableCell>\n                <TableCell align=\"left\">\n                  <span className=\"status\" style={makeStyle(row.status)}>\n                    {row.status}\n                  </span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Modal open={modalOpen} onClose={handleCloseModal}>\n        <div className=\"Modal\" style={{ textAlign: \"center\" }}>\n          <h3>{selectedRow}</h3>\n          <img\n            src={imageUrl}\n            alt={selectedRow}\n            style={{\n              maxWidth: \"100%\",\n              maxHeight: \"100%\",\n              margin: \"auto\",\n              display: \"block\",\n              border: \"none\",\n            }}\n          />\n          <textarea\n            value={newDescription || description}\n            onChange={(e) => setNewDescription(e.target.value)}\n            rows={4}\n            style={{ width: \"100%\", marginTop: 10 }}\n          />\n          <button onClick={handleUpdate}>Update</button>\n          <button onClick={handleDelete}>Delete</button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default BasicTable;\n"]},"metadata":{},"sourceType":"module"}