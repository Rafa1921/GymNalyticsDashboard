{"ast":null,"code":"var _jsxFileName = \"/Users/gela/Downloads/Gym dashboard analytics/src/components/Table/Table.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport Modal from \"@mui/material/Modal\";\nimport Button from \"@mui/material/Button\"; // Import Button component from Material-UI\n\nimport dumbbellImage from \"../assets/dumbbell.png\";\nimport barImage from \"../assets/bar.png\";\nimport \"./Table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst makeStyle = status => {\n  if (status === \"Approved\") {\n    return {\n      background: \"rgb(145 254 159 / 47%)\",\n      color: \"green\"\n    };\n  } else if (status === \"Pending\") {\n    return {\n      background: \"#ffadad8f\",\n      color: \"red\"\n    };\n  } else {\n    return {\n      background: \"#59bfff\",\n      color: \"white\"\n    };\n  }\n};\n\nconst descriptions = {\n  Dumbbells: \"A dumbbell is a versatile piece of fitness equipment consisting of a short bar with weights attached at each end. These weights can be adjusted to vary the resistance for different exercises. Dumbbells come in various shapes, sizes, and materials, ranging from traditional iron or steel to more modern designs featuring rubber-coated ends for better grip and protection. They are commonly used for strength training and muscle building, offering a wide range of exercises targeting different muscle groups.\",\n  \"Gym Bar\": \"On the other hand, a gym bar, often referred to as a barbell, is a long, straight bar typically used for heavy lifting exercises such as squats, deadlifts, and bench presses. It usually has weights attached at both ends, known as weight plates, which can be customized to adjust the overall resistance. Gym bars come in different lengths and thicknesses, catering to various lifting preferences and body sizes. They are a staple in weightlifting and powerlifting routines, providing stability and balance during compound exercises that engage multiple muscle groups simultaneously.\"\n};\n\nconst BasicTable = _ref => {\n  _s();\n\n  let {\n    handleUpdateOrder,\n    handleDeleteOrder\n  } = _ref;\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newImageUrl, setNewImageUrl] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [description, setDescription] = useState(\"\");\n  const [rows, setRows] = useState([{\n    name: \"Dumbbells\",\n    trackingId: 12345,\n    date: \"2024-05-26\",\n    status: \"Approved\",\n    imageUrl: dumbbellImage\n  }, {\n    name: \"Gym Bar\",\n    trackingId: 67890,\n    date: \"2024-05-25\",\n    status: \"Pending\",\n    imageUrl: barImage\n  }]);\n  const [createModalOpen, setCreateModalOpen] = useState(false);\n\n  const handleRowClick = (name, imageUrl) => {\n    setSelectedRow(name);\n    setImageUrl(imageUrl);\n    setNewImageUrl(\"\"); // Reset new image URL\n\n    setDescription(descriptions[name]);\n    setModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n\n    if (file && newImageUrl) {\n      handleUpdate();\n    }\n  };\n\n  const handleCreateModalOpen = () => {\n    setCreateModalOpen(true);\n  };\n\n  const handleCreateModalClose = () => {\n    setCreateModalOpen(false);\n  };\n\n  const handleCreate = () => {\n    if (file && newImageUrl && description) {\n      const newRow = {\n        name: \"New Item\",\n        trackingId: Math.floor(Math.random() * 100000),\n        // Generate random tracking ID\n        date: new Date().toISOString().split(\"T\")[0],\n        // Get current date in YYYY-MM-DD format\n        status: \"Pending\",\n        imageUrl: newImageUrl\n      };\n      setRows([...rows, newRow]);\n      setCreateModalOpen(false);\n      setNewImageUrl(\"\");\n      setDescription(\"\");\n      setFile(null);\n    } else {\n      alert(\"Please upload an image and enter a description.\");\n    }\n  };\n\n  const handleUpdate = () => {// Implementation remains the same\n  };\n\n  const handleDelete = () => {\n    if (selectedRow) {\n      const updatedRows = rows.filter(row => row.name !== selectedRow);\n      console.log(\"Deleted:\", selectedRow); // Log the deleted row\n\n      setRows(updatedRows);\n      setSelectedRow(null);\n      setModalOpen(false);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recent Gym Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"contained\",\n      onClick: handleCreateModalOpen,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        boxShadow: \"0px 13px 20px 0px #80808029\",\n        maxHeight: \"400px\",\n        overflowY: \"scroll\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: \"Tracking ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          style: {\n            color: \"white\"\n          },\n          children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              \"&:last-child td, &:last-child th\": {\n                border: 0\n              },\n              cursor: \"pointer\",\n              backgroundColor: selectedRow === row.name ? \"lightgray\" : \"inherit\"\n            },\n            onClick: () => handleRowClick(row.name, row.imageUrl),\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.trackingId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status\",\n                style: makeStyle(row.status),\n                children: row.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this)]\n          }, row.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      onClose: handleCloseModal\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: createModalOpen,\n      onClose: handleCreateModalClose,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Modal\",\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"Create New Item\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          accept: \"image/*\",\n          onChange: e => {\n            const selectedFile = e.target.files[0];\n            const reader = new FileReader();\n\n            reader.onload = e => {\n              setNewImageUrl(e.target.result);\n              setFile(selectedFile);\n            };\n\n            reader.readAsDataURL(selectedFile);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: description,\n          onChange: e => setDescription(e.target.value),\n          placeholder: \"Enter Description\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"contained\",\n          onClick: handleCreate,\n          children: \"Create\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 123,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicTable, \"RL+MsL4TrHHrQUz/WdwAGyadxx4=\");\n\n_c = BasicTable;\nexport default BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/Users/gela/Downloads/Gym dashboard analytics/src/components/Table/Table.jsx"],"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Modal","Button","dumbbellImage","barImage","makeStyle","status","background","color","descriptions","Dumbbells","BasicTable","handleUpdateOrder","handleDeleteOrder","selectedRow","setSelectedRow","imageUrl","setImageUrl","modalOpen","setModalOpen","newImageUrl","setNewImageUrl","file","setFile","description","setDescription","rows","setRows","name","trackingId","date","createModalOpen","setCreateModalOpen","handleRowClick","handleCloseModal","handleUpdate","handleCreateModalOpen","handleCreateModalClose","handleCreate","newRow","Math","floor","random","Date","toISOString","split","alert","handleDelete","updatedRows","filter","row","console","log","boxShadow","maxHeight","overflowY","minWidth","map","border","cursor","backgroundColor","textAlign","e","selectedFile","target","files","reader","FileReader","onload","result","readAsDataURL","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport Modal from \"@mui/material/Modal\";\nimport Button from \"@mui/material/Button\"; // Import Button component from Material-UI\nimport dumbbellImage from \"../assets/dumbbell.png\";\nimport barImage from \"../assets/bar.png\";\nimport \"./Table.css\";\n\nconst makeStyle = (status) => {\n  if (status === \"Approved\") {\n    return {\n      background: \"rgb(145 254 159 / 47%)\",\n      color: \"green\",\n    };\n  } else if (status === \"Pending\") {\n    return {\n      background: \"#ffadad8f\",\n      color: \"red\",\n    };\n  } else {\n    return {\n      background: \"#59bfff\",\n      color: \"white\",\n    };\n  }\n};\n\nconst descriptions = {\n  Dumbbells:\n    \"A dumbbell is a versatile piece of fitness equipment consisting of a short bar with weights attached at each end. These weights can be adjusted to vary the resistance for different exercises. Dumbbells come in various shapes, sizes, and materials, ranging from traditional iron or steel to more modern designs featuring rubber-coated ends for better grip and protection. They are commonly used for strength training and muscle building, offering a wide range of exercises targeting different muscle groups.\",\n  \"Gym Bar\":\n    \"On the other hand, a gym bar, often referred to as a barbell, is a long, straight bar typically used for heavy lifting exercises such as squats, deadlifts, and bench presses. It usually has weights attached at both ends, known as weight plates, which can be customized to adjust the overall resistance. Gym bars come in different lengths and thicknesses, catering to various lifting preferences and body sizes. They are a staple in weightlifting and powerlifting routines, providing stability and balance during compound exercises that engage multiple muscle groups simultaneously.\",\n};\n\nconst BasicTable = ({ handleUpdateOrder, handleDeleteOrder }) => {\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newImageUrl, setNewImageUrl] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [description, setDescription] = useState(\"\");\n  const [rows, setRows] = useState([\n    {\n      name: \"Dumbbells\",\n      trackingId: 12345,\n      date: \"2024-05-26\",\n      status: \"Approved\",\n      imageUrl: dumbbellImage,\n    },\n    {\n      name: \"Gym Bar\",\n      trackingId: 67890,\n      date: \"2024-05-25\",\n      status: \"Pending\",\n      imageUrl: barImage,\n    },\n  ]);\n  const [createModalOpen, setCreateModalOpen] = useState(false);\n\n  const handleRowClick = (name, imageUrl) => {\n    setSelectedRow(name);\n    setImageUrl(imageUrl);\n    setNewImageUrl(\"\"); // Reset new image URL\n    setDescription(descriptions[name]);\n    setModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    if (file && newImageUrl) {\n      handleUpdate();\n    }\n  };\n\n  const handleCreateModalOpen = () => {\n    setCreateModalOpen(true);\n  };\n\n  const handleCreateModalClose = () => {\n    setCreateModalOpen(false);\n  };\n\n  const handleCreate = () => {\n    if (file && newImageUrl && description) {\n      const newRow = {\n        name: \"New Item\",\n        trackingId: Math.floor(Math.random() * 100000), // Generate random tracking ID\n        date: new Date().toISOString().split(\"T\")[0], // Get current date in YYYY-MM-DD format\n        status: \"Pending\",\n        imageUrl: newImageUrl,\n      };\n      setRows([...rows, newRow]);\n      setCreateModalOpen(false);\n      setNewImageUrl(\"\");\n      setDescription(\"\");\n      setFile(null);\n    } else {\n      alert(\"Please upload an image and enter a description.\");\n    }\n  };\n\n  const handleUpdate = () => {\n    // Implementation remains the same\n  };\n\n  const handleDelete = () => {\n    if (selectedRow) {\n      const updatedRows = rows.filter((row) => row.name !== selectedRow);\n      console.log(\"Deleted:\", selectedRow); // Log the deleted row\n      setRows(updatedRows);\n      setSelectedRow(null);\n      setModalOpen(false);\n    }\n  };\n\n  return (\n    <div className=\"Table\">\n      <h3>Recent Gym Orders</h3>\n      <Button variant=\"contained\" onClick={handleCreateModalOpen}>\n        Create\n      </Button>\n      <TableContainer\n        component={Paper}\n        style={{\n          boxShadow: \"0px 13px 20px 0px #80808029\",\n          maxHeight: \"400px\",\n          overflowY: \"scroll\",\n        }}\n      >\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Product</TableCell>\n              <TableCell align=\"left\">Tracking ID</TableCell>\n              <TableCell align=\"left\">Date</TableCell>\n              <TableCell align=\"left\">Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody style={{ color: \"white\" }}>\n            {rows.map((row) => (\n              <TableRow\n                key={row.name}\n                sx={{\n                  \"&:last-child td, &:last-child th\": { border: 0 },\n                  cursor: \"pointer\",\n                  backgroundColor:\n                    selectedRow === row.name ? \"lightgray\" : \"inherit\",\n                }}\n                onClick={() => handleRowClick(row.name, row.imageUrl)}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.trackingId}</TableCell>\n                <TableCell align=\"left\">{row.date}</TableCell>\n                <TableCell align=\"left\">\n                  <span className=\"status\" style={makeStyle(row.status)}>\n                    {row.status}\n                  </span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Modal open={modalOpen} onClose={handleCloseModal}>\n        {/* Modal content remains the same */}\n      </Modal>\n      <Modal open={createModalOpen} onClose={handleCreateModalClose}>\n        {/* Modal for create new item */}\n        <div className=\"Modal\" style={{ textAlign: \"center\" }}>\n          <h3>Create New Item</h3>\n          <input\n            type=\"file\"\n            accept=\"image/*\"\n            onChange={(e) => {\n              const selectedFile = e.target.files[0];\n              const reader = new FileReader();\n              reader.onload = (e) => {\n                setNewImageUrl(e.target.result);\n                setFile(selectedFile);\n              };\n              reader.readAsDataURL(selectedFile);\n            }}\n          />\n          <textarea\n            value={description}\n            onChange={(e) => setDescription(e.target.value)}\n            placeholder=\"Enter Description\"\n          />\n          <Button variant=\"contained\" onClick={handleCreate}>\n            Create\n          </Button>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default BasicTable;\n"]},"metadata":{},"sourceType":"module"}