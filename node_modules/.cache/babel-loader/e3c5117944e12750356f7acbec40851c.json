{"ast":null,"code":"var _jsxFileName = \"/Users/gela/Downloads/Gym dashboard analytics/src/components/ParentComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport BasicTable from \"./Table/BasicTable\"; // Parent component\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ParentComponent = () => {\n  _s();\n\n  // State to hold the rows of data\n  const [orderRows, setOrderRows] = useState([{\n    name: \"Dumbbells\",\n    trackingId: 18232908424,\n    date: \"25 May 2024\",\n    status: \"Approved\"\n  }, {\n    name: \"Gym Bar\",\n    trackingId: 18934325424,\n    date: \"25 May 2024\",\n    status: \"Pending\"\n  }]); // Function to update an order\n\n  const handleUpdateOrder = productName => {\n    // Find the order in the list\n    const updatedRows = orderRows.map(order => {\n      if (order.name === productName) {\n        // Modify the order as needed, for example, changing the status\n        return { ...order,\n          status: \"Updated\"\n        };\n      }\n\n      return order;\n    }); // Update the state with the modified rows\n\n    setOrderRows(updatedRows);\n  }; // Function to delete an order\n\n\n  const handleDeleteOrder = productName => {\n    // Filter out the order to be deleted\n    const updatedRows = orderRows.filter(order => order.name !== productName); // Update the state with the filtered rows\n\n    setOrderRows(updatedRows);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(BasicTable, {\n      rows: orderRows,\n      handleUpdateOrder: handleUpdateOrder,\n      handleDeleteOrder: handleDeleteOrder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ParentComponent, \"rrxKEylVRHzlLdp/p44f4JYIcKw=\");\n\n_c = ParentComponent;\nexport default ParentComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"ParentComponent\");","map":{"version":3,"sources":["/Users/gela/Downloads/Gym dashboard analytics/src/components/ParentComponent.js"],"names":["React","useState","BasicTable","ParentComponent","orderRows","setOrderRows","name","trackingId","date","status","handleUpdateOrder","productName","updatedRows","map","order","handleDeleteOrder","filter"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,oBAAvB,C,CAEA;;;;AACA,MAAMC,eAAe,GAAG,MAAM;AAAA;;AAC5B;AACA,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,CACzC;AACEK,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,UAAU,EAAE,WAFd;AAGEC,IAAAA,IAAI,EAAE,aAHR;AAIEC,IAAAA,MAAM,EAAE;AAJV,GADyC,EAOzC;AACEH,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,UAAU,EAAE,WAFd;AAGEC,IAAAA,IAAI,EAAE,aAHR;AAIEC,IAAAA,MAAM,EAAE;AAJV,GAPyC,CAAD,CAA1C,CAF4B,CAiB5B;;AACA,QAAMC,iBAAiB,GAAIC,WAAD,IAAiB;AACzC;AACA,UAAMC,WAAW,GAAGR,SAAS,CAACS,GAAV,CAAeC,KAAD,IAAW;AAC3C,UAAIA,KAAK,CAACR,IAAN,KAAeK,WAAnB,EAAgC;AAC9B;AACA,eAAO,EAAE,GAAGG,KAAL;AAAYL,UAAAA,MAAM,EAAE;AAApB,SAAP;AACD;;AACD,aAAOK,KAAP;AACD,KANmB,CAApB,CAFyC,CAUzC;;AACAT,IAAAA,YAAY,CAACO,WAAD,CAAZ;AACD,GAZD,CAlB4B,CAgC5B;;;AACA,QAAMG,iBAAiB,GAAIJ,WAAD,IAAiB;AACzC;AACA,UAAMC,WAAW,GAAGR,SAAS,CAACY,MAAV,CAAkBF,KAAD,IAAWA,KAAK,CAACR,IAAN,KAAeK,WAA3C,CAApB,CAFyC,CAIzC;;AACAN,IAAAA,YAAY,CAACO,WAAD,CAAZ;AACD,GAND;;AAQA,sBACE;AAAA,2BAEE,QAAC,UAAD;AACE,MAAA,IAAI,EAAER,SADR;AAEE,MAAA,iBAAiB,EAAEM,iBAFrB;AAGE,MAAA,iBAAiB,EAAEK;AAHrB;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAnDD;;GAAMZ,e;;KAAAA,e;AAqDN,eAAeA,eAAf","sourcesContent":["import React, { useState } from \"react\";\nimport BasicTable from \"./Table/BasicTable\";\n\n// Parent component\nconst ParentComponent = () => {\n  // State to hold the rows of data\n  const [orderRows, setOrderRows] = useState([\n    {\n      name: \"Dumbbells\",\n      trackingId: 18232908424,\n      date: \"25 May 2024\",\n      status: \"Approved\",\n    },\n    {\n      name: \"Gym Bar\",\n      trackingId: 18934325424,\n      date: \"25 May 2024\",\n      status: \"Pending\",\n    },\n  ]);\n\n  // Function to update an order\n  const handleUpdateOrder = (productName) => {\n    // Find the order in the list\n    const updatedRows = orderRows.map((order) => {\n      if (order.name === productName) {\n        // Modify the order as needed, for example, changing the status\n        return { ...order, status: \"Updated\" };\n      }\n      return order;\n    });\n\n    // Update the state with the modified rows\n    setOrderRows(updatedRows);\n  };\n\n  // Function to delete an order\n  const handleDeleteOrder = (productName) => {\n    // Filter out the order to be deleted\n    const updatedRows = orderRows.filter((order) => order.name !== productName);\n\n    // Update the state with the filtered rows\n    setOrderRows(updatedRows);\n  };\n\n  return (\n    <div>\n      {/* Render BasicTable component and pass the handleUpdateOrder and handleDeleteOrder functions */}\n      <BasicTable\n        rows={orderRows}\n        handleUpdateOrder={handleUpdateOrder}\n        handleDeleteOrder={handleDeleteOrder}\n      />\n    </div>\n  );\n};\n\nexport default ParentComponent;\n"]},"metadata":{},"sourceType":"module"}