{"ast":null,"code":"var _jsxFileName = \"/Users/gela/Downloads/Gym dashboard analytics/src/components/Table/Table.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport Modal from \"@mui/material/Modal\";\nimport { v4 as uuidv4 } from \"uuid\"; // Import uuid\n\nimport dumbbellImage from \"../assets/dumbbell.png\";\nimport barImage from \"../assets/bar.png\";\nimport \"./Table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst makeStyle = status => {\n  if (status === \"Approved\") {\n    return {\n      background: \"rgb(145 254 159 / 47%)\",\n      color: \"green\"\n    };\n  } else if (status === \"Pending\") {\n    return {\n      background: \"#ffadad8f\",\n      color: \"red\"\n    };\n  } else {\n    return {\n      background: \"#59bfff\",\n      color: \"white\"\n    };\n  }\n};\n\nconst descriptions = {\n  Dumbbells: \"A dumbbell is a versatile piece of fitness equipment consisting of a short bar with weights attached at each end. These weights can be adjusted to vary the resistance for different exercises. Dumbbells come in various shapes, sizes, and materials, ranging from traditional iron or steel to more modern designs featuring rubber-coated ends for better grip and protection. They are commonly used for strength training and muscle building, offering a wide range of exercises targeting different muscle groups.\",\n  \"Gym Bar\": \"On the other hand, a gym bar, often referred to as a barbell, is a long, straight bar typically used for heavy lifting exercises such as squats, deadlifts, and bench presses. It usually has weights attached at both ends, known as weight plates, which can be customized to adjust the overall resistance. Gym bars come in different lengths and thicknesses, catering to various lifting preferences and body sizes. They are a staple in weightlifting and powerlifting routines, providing stability and balance during compound exercises that engage multiple muscle groups simultaneously.\"\n};\n\nconst BasicTable = _ref => {\n  _s();\n\n  let {\n    handleUpdateOrder,\n    handleDeleteOrder\n  } = _ref;\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newImageUrl, setNewImageUrl] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [description, setDescription] = useState(\"\");\n  const [productName, setProductName] = useState(\"\");\n  const [creatingOrder, setCreatingOrder] = useState(false); // State to track order creation\n\n  const [rows, setRows] = useState([{\n    id: uuidv4(),\n    name: \"Dumbbells\",\n    trackingId: 12345,\n    date: \"2024-05-26\",\n    status: \"Approved\",\n    imageUrl: dumbbellImage\n  }, {\n    id: uuidv4(),\n    name: \"Gym Bar\",\n    trackingId: 67890,\n    date: \"2024-05-25\",\n    status: \"Pending\",\n    imageUrl: barImage\n  }]);\n\n  const handleRowClick = (name, imageUrl) => {\n    setSelectedRow(name);\n    setImageUrl(imageUrl);\n    setNewImageUrl(\"\"); // Reset new image URL\n\n    setDescription(descriptions[name]);\n    setModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n\n    if (file && newImageUrl) {\n      handleUpdate();\n    } // Reset states after closing the modal\n\n\n    setFile(null);\n    setNewImageUrl(\"\");\n    setDescription(\"\");\n    setProductName(\"\");\n    setCreatingOrder(false);\n  };\n\n  const handleUpdate = () => {\n    if (file) {\n      const updatedRows = rows.map(row => {\n        if (row.name === selectedRow) {\n          return { ...row,\n            imageUrl: newImageUrl || imageUrl,\n            description: description,\n            name: productName || row.name\n          };\n        }\n\n        return row;\n      });\n      setRows(updatedRows);\n      console.log(\"Image updated:\", newImageUrl || imageUrl);\n    }\n  };\n\n  const handleDelete = id => {\n    const updatedRows = rows.filter(row => row.id !== id);\n    console.log(\"Deleted:\", id);\n    setRows(updatedRows);\n    setSelectedRow(null);\n    setModalOpen(false); // Close the modal and reset states when deleting the selected row\n\n    setCreatingOrder(true);\n    setProductName(\"\");\n    setNewImageUrl(\"\");\n    setDescription(\"\");\n  };\n\n  const handleCreateOrder = () => {\n    setCreatingOrder(true); // Set creatingOrder state to true to open the modal\n\n    setModalOpen(true); // Open the modal for creating order\n  };\n\n  const handleConfirmCreateOrder = () => {\n    // Create a new order\n    setRows([...rows, {\n      id: uuidv4(),\n      name: productName || \"New Product\",\n      trackingId: 0,\n      date: new Date().toISOString().slice(0, 10),\n      status: \"Pending\",\n      imageUrl: newImageUrl || \"\" // Use the uploaded image URL\n\n    }]); // Close the modal and reset states\n\n    setModalOpen(false);\n    setCreatingOrder(false);\n    setProductName(\"\");\n    setNewImageUrl(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recent Gym Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), rows.length > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleCreateOrder,\n      disabled: creatingOrder,\n      children: \"Create Order\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        boxShadow: \"0px 13px 20px 0px #80808029\",\n        maxHeight: \"400px\",\n        overflowY: \"scroll\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: \"Tracking ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          style: {\n            color: \"white\"\n          },\n          children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              \"&:last-child td, &:last-child th\": {\n                border: 0\n              },\n              cursor: \"pointer\",\n              backgroundColor: selectedRow === row.name ? \"lightgray\" : \"inherit\"\n            },\n            onClick: () => handleRowClick(row.name, row.imageUrl),\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.trackingId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status\",\n                style: makeStyle(row.status),\n                children: row.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this)]\n          }, row.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      onClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Modal\",\n        style: {\n          textAlign: \"center\"\n        },\n        children: creatingOrder ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create New Order\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: productName,\n            placeholder: \"Product Name\",\n            onChange: e => setProductName(e.target.value)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            onChange: e => {\n              const selectedFile = e.target.files[0];\n              const reader = new FileReader();\n\n              reader.onload = e => {\n                setNewImageUrl(e.target.result);\n                setFile(selectedFile);\n              };\n\n              reader.readAsDataURL(selectedFile);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleConfirmCreateOrder,\n            children: \"Confirm\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleCloseModal,\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: selectedRow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: newImageUrl || imageUrl,\n            alt: selectedRow,\n            style: {\n              maxWidth: \"100%\",\n              maxHeight: \"100%\",\n              margin: \"auto\",\n              display: \"block\",\n              border: \"none\"\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              color: \"black\",\n              fontSize: 20,\n              maxWidth: \"80%\",\n              margin: \"0 auto\"\n            },\n            children: description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: handleUpdate,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDelete(selectedRow),\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 251,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicTable, \"vw9sMXcoL53O4nzl6/oxH6cLYl8=\");\n\n_c = BasicTable;\nexport default BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/Users/gela/Downloads/Gym dashboard analytics/src/components/Table/Table.jsx"],"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Modal","v4","uuidv4","dumbbellImage","barImage","makeStyle","status","background","color","descriptions","Dumbbells","BasicTable","handleUpdateOrder","handleDeleteOrder","selectedRow","setSelectedRow","imageUrl","setImageUrl","modalOpen","setModalOpen","newImageUrl","setNewImageUrl","file","setFile","description","setDescription","productName","setProductName","creatingOrder","setCreatingOrder","rows","setRows","id","name","trackingId","date","handleRowClick","handleCloseModal","handleUpdate","updatedRows","map","row","console","log","handleDelete","filter","handleCreateOrder","handleConfirmCreateOrder","Date","toISOString","slice","length","boxShadow","maxHeight","overflowY","minWidth","border","cursor","backgroundColor","textAlign","e","target","value","selectedFile","files","reader","FileReader","onload","result","readAsDataURL","maxWidth","margin","display","fontSize"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport Modal from \"@mui/material/Modal\";\nimport { v4 as uuidv4 } from \"uuid\"; // Import uuid\nimport dumbbellImage from \"../assets/dumbbell.png\";\nimport barImage from \"../assets/bar.png\";\nimport \"./Table.css\";\n\nconst makeStyle = (status) => {\n  if (status === \"Approved\") {\n    return {\n      background: \"rgb(145 254 159 / 47%)\",\n      color: \"green\",\n    };\n  } else if (status === \"Pending\") {\n    return {\n      background: \"#ffadad8f\",\n      color: \"red\",\n    };\n  } else {\n    return {\n      background: \"#59bfff\",\n      color: \"white\",\n    };\n  }\n};\n\nconst descriptions = {\n  Dumbbells:\n    \"A dumbbell is a versatile piece of fitness equipment consisting of a short bar with weights attached at each end. These weights can be adjusted to vary the resistance for different exercises. Dumbbells come in various shapes, sizes, and materials, ranging from traditional iron or steel to more modern designs featuring rubber-coated ends for better grip and protection. They are commonly used for strength training and muscle building, offering a wide range of exercises targeting different muscle groups.\",\n  \"Gym Bar\":\n    \"On the other hand, a gym bar, often referred to as a barbell, is a long, straight bar typically used for heavy lifting exercises such as squats, deadlifts, and bench presses. It usually has weights attached at both ends, known as weight plates, which can be customized to adjust the overall resistance. Gym bars come in different lengths and thicknesses, catering to various lifting preferences and body sizes. They are a staple in weightlifting and powerlifting routines, providing stability and balance during compound exercises that engage multiple muscle groups simultaneously.\",\n};\n\nconst BasicTable = ({ handleUpdateOrder, handleDeleteOrder }) => {\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newImageUrl, setNewImageUrl] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [description, setDescription] = useState(\"\");\n  const [productName, setProductName] = useState(\"\");\n  const [creatingOrder, setCreatingOrder] = useState(false); // State to track order creation\n\n  const [rows, setRows] = useState([\n    {\n      id: uuidv4(),\n      name: \"Dumbbells\",\n      trackingId: 12345,\n      date: \"2024-05-26\",\n      status: \"Approved\",\n      imageUrl: dumbbellImage,\n    },\n    {\n      id: uuidv4(),\n      name: \"Gym Bar\",\n      trackingId: 67890,\n      date: \"2024-05-25\",\n      status: \"Pending\",\n      imageUrl: barImage,\n    },\n  ]);\n\n  const handleRowClick = (name, imageUrl) => {\n    setSelectedRow(name);\n    setImageUrl(imageUrl);\n    setNewImageUrl(\"\"); // Reset new image URL\n    setDescription(descriptions[name]);\n    setModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    if (file && newImageUrl) {\n      handleUpdate();\n    }\n    // Reset states after closing the modal\n    setFile(null);\n    setNewImageUrl(\"\");\n    setDescription(\"\");\n    setProductName(\"\");\n    setCreatingOrder(false);\n  };\n\n  const handleUpdate = () => {\n    if (file) {\n      const updatedRows = rows.map((row) => {\n        if (row.name === selectedRow) {\n          return {\n            ...row,\n            imageUrl: newImageUrl || imageUrl,\n            description: description,\n            name: productName || row.name,\n          };\n        }\n        return row;\n      });\n      setRows(updatedRows);\n      console.log(\"Image updated:\", newImageUrl || imageUrl);\n    }\n  };\n\n  const handleDelete = (id) => {\n    const updatedRows = rows.filter((row) => row.id !== id);\n    console.log(\"Deleted:\", id);\n    setRows(updatedRows);\n    setSelectedRow(null);\n    setModalOpen(false);\n    // Close the modal and reset states when deleting the selected row\n    setCreatingOrder(true);\n    setProductName(\"\");\n    setNewImageUrl(\"\");\n    setDescription(\"\");\n  };\n\n  const handleCreateOrder = () => {\n    setCreatingOrder(true); // Set creatingOrder state to true to open the modal\n    setModalOpen(true); // Open the modal for creating order\n  };\n\n  const handleConfirmCreateOrder = () => {\n    // Create a new order\n    setRows([\n      ...rows,\n      {\n        id: uuidv4(),\n        name: productName || \"New Product\",\n        trackingId: 0,\n        date: new Date().toISOString().slice(0, 10),\n        status: \"Pending\",\n        imageUrl: newImageUrl || \"\", // Use the uploaded image URL\n      },\n    ]);\n    // Close the modal and reset states\n    setModalOpen(false);\n    setCreatingOrder(false);\n    setProductName(\"\");\n    setNewImageUrl(\"\");\n  };\n\n  return (\n    <div className=\"Table\">\n      <h3>Recent Gym Orders</h3>\n      {rows.length > 0 && (\n        <button onClick={handleCreateOrder} disabled={creatingOrder}>\n          Create Order\n        </button>\n      )}\n      <TableContainer\n        component={Paper}\n        style={{\n          boxShadow: \"0px 13px 20px 0px #80808029\",\n          maxHeight: \"400px\",\n          overflowY: \"scroll\",\n        }}\n      >\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Product</TableCell>\n              <TableCell align=\"left\">Tracking ID</TableCell>\n              <TableCell align=\"left\">Date</TableCell>\n              <TableCell align=\"left\">Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody style={{ color: \"white\" }}>\n            {rows.map((row) => (\n              <TableRow\n                key={row.id}\n                sx={{\n                  \"&:last-child td, &:last-child th\": { border: 0 },\n                  cursor: \"pointer\",\n                  backgroundColor:\n                    selectedRow === row.name ? \"lightgray\" : \"inherit\",\n                }}\n                onClick={() => handleRowClick(row.name, row.imageUrl)}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.trackingId}</TableCell>\n                <TableCell align=\"left\">{row.date}</TableCell>\n                <TableCell align=\"left\">\n                  <span className=\"status\" style={makeStyle(row.status)}>\n                    {row.status}\n                  </span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Modal open={modalOpen} onClose={handleCloseModal}>\n        <div className=\"Modal\" style={{ textAlign: \"center\" }}>\n          {creatingOrder ? (\n            <>\n              <h3>Create New Order</h3>\n              <input\n                type=\"text\"\n                value={productName}\n                placeholder=\"Product Name\"\n                onChange={(e) => setProductName(e.target.value)}\n              />\n              <input\n                type=\"file\"\n                accept=\"image/*\"\n                onChange={(e) => {\n                  const selectedFile = e.target.files[0];\n                  const reader = new FileReader();\n                  reader.onload = (e) => {\n                    setNewImageUrl(e.target.result);\n                    setFile(selectedFile);\n                  };\n                  reader.readAsDataURL(selectedFile);\n                }}\n              />\n              <button onClick={handleConfirmCreateOrder}>Confirm</button>\n              <button onClick={handleCloseModal}>Cancel</button>\n            </>\n          ) : (\n            <>\n              <h3>{selectedRow}</h3>\n              <img\n                src={newImageUrl || imageUrl}\n                alt={selectedRow}\n                style={{\n                  maxWidth: \"100%\",\n                  maxHeight: \"100%\",\n                  margin: \"auto\",\n                  display: \"block\",\n                  border: \"none\",\n                }}\n              />\n              <p\n                style={{\n                  color: \"black\",\n                  fontSize: 20,\n                  maxWidth: \"80%\",\n                  margin: \"0 auto\",\n                }}\n              >\n                {description}\n              </p>\n              <button onClick={handleUpdate}>Update</button>\n              <button onClick={() => handleDelete(selectedRow)}>Delete</button>\n            </>\n          )}\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default BasicTable;\n"]},"metadata":{},"sourceType":"module"}