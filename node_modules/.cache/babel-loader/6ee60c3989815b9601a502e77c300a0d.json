{"ast":null,"code":"var _jsxFileName = \"/Users/gela/Downloads/Gym dashboard analytics/src/components/Table/Table.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport Modal from \"@mui/material/Modal\";\nimport dumbbellImage from \"../assets/dumbbell.png\";\nimport barImage from \"../assets/bar.png\";\nimport \"./Table.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst makeStyle = status => {\n  if (status === \"Approved\") {\n    return {\n      background: \"rgb(145 254 159 / 47%)\",\n      color: \"green\"\n    };\n  } else if (status === \"Pending\") {\n    return {\n      background: \"#ffadad8f\",\n      color: \"red\"\n    };\n  } else {\n    return {\n      background: \"#59bfff\",\n      color: \"white\"\n    };\n  }\n};\n\nconst BasicTable = _ref => {\n  _s();\n\n  let {\n    handleUpdateOrder,\n    handleDeleteOrder\n  } = _ref;\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newImageUrl, setNewImageUrl] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [rows, setRows] = useState([{\n    name: \"Dumbbells\",\n    trackingId: 12345,\n    date: \"2024-05-26\",\n    status: \"Approved\",\n    imageUrl: dumbbellImage\n  }, {\n    name: \"Gym Bar\",\n    trackingId: 67890,\n    date: \"2024-05-25\",\n    status: \"Pending\",\n    imageUrl: barImage\n  }]);\n\n  const handleRowClick = (name, imageUrl) => {\n    setSelectedRow(name);\n    setImageUrl(imageUrl);\n    setNewImageUrl(\"\"); // Reset new image URL\n\n    setModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n\n    if (file && newImageUrl) {\n      updateRow(selectedRow, newImageUrl);\n    }\n  };\n\n  const handleUpdate = () => {\n    if (file) {\n      // Perform update logic with new image\n      setNewImageUrl(newImageUrl || imageUrl); // Use new image URL if provided, otherwise keep the current image URL\n\n      console.log(\"Image updated:\", newImageUrl || imageUrl); // Log the updated image URL\n\n      setFile(null); // Reset file state\n    } else {\n      // Prompt user to select a file\n      const input = document.createElement(\"input\");\n      input.type = \"file\";\n      input.accept = \"image/*\";\n\n      input.onchange = e => {\n        const selectedFile = e.target.files[0];\n        const reader = new FileReader();\n\n        reader.onload = e => {\n          setNewImageUrl(e.target.result);\n          setFile(selectedFile);\n        };\n\n        reader.readAsDataURL(selectedFile);\n      };\n\n      input.click();\n    }\n  };\n\n  const handleDelete = () => {\n    // Implement delete functionality here\n    console.log(\"Delete button clicked\");\n  };\n\n  const updateRow = (name, newImageUrl) => {\n    const updatedRows = rows.map(row => {\n      if (row.name === name) {\n        return { ...row,\n          imageUrl: newImageUrl\n        };\n      }\n\n      return row;\n    });\n    setRows(updatedRows);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Table\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Recent Gym Orders\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n      component: Paper,\n      style: {\n        boxShadow: \"0px 13px 20px 0px #80808029\",\n        maxHeight: \"400px\",\n        overflowY: \"scroll\"\n      },\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        sx: {\n          minWidth: 650\n        },\n        \"aria-label\": \"simple table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: \"Tracking ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: \"Date\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: \"Status\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          style: {\n            color: \"white\"\n          },\n          children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n            sx: {\n              \"&:last-child td, &:last-child th\": {\n                border: 0\n              },\n              cursor: \"pointer\",\n              backgroundColor: selectedRow === row.name ? \"lightgray\" : \"inherit\"\n            },\n            onClick: () => handleRowClick(row.name, row.imageUrl),\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              component: \"th\",\n              scope: \"row\",\n              children: row.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.trackingId\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: row.date\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"left\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"status\",\n                style: makeStyle(row.status),\n                children: row.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this)]\n          }, row.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      open: modalOpen,\n      onClose: handleCloseModal,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Modal\",\n        style: {\n          textAlign: \"center\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: selectedRow\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: newImageUrl || imageUrl,\n          alt: \"Product\",\n          style: {\n            maxWidth: \"100%\",\n            maxHeight: \"80vh\",\n            margin: \"auto\",\n            display: \"block\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: \"magenta\",\n              marginRight: \"10px\"\n            },\n            onClick: handleUpdate,\n            children: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              backgroundColor: \"magenta\"\n            },\n            onClick: handleDelete,\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 5\n  }, this);\n};\n\n_s(BasicTable, \"1GLkaaPQzCk2MllhZ24eoJkhSHc=\");\n\n_c = BasicTable;\nexport default BasicTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"BasicTable\");","map":{"version":3,"sources":["/Users/gela/Downloads/Gym dashboard analytics/src/components/Table/Table.jsx"],"names":["React","useState","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","Modal","dumbbellImage","barImage","makeStyle","status","background","color","BasicTable","handleUpdateOrder","handleDeleteOrder","selectedRow","setSelectedRow","imageUrl","setImageUrl","modalOpen","setModalOpen","newImageUrl","setNewImageUrl","file","setFile","rows","setRows","name","trackingId","date","handleRowClick","handleCloseModal","updateRow","handleUpdate","console","log","input","document","createElement","type","accept","onchange","e","selectedFile","target","files","reader","FileReader","onload","result","readAsDataURL","click","handleDelete","updatedRows","map","row","boxShadow","maxHeight","overflowY","minWidth","border","cursor","backgroundColor","textAlign","maxWidth","margin","display","marginRight"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,aAAP,MAA0B,wBAA1B;AACA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAO,aAAP;;;AAEA,MAAMC,SAAS,GAAIC,MAAD,IAAY;AAC5B,MAAIA,MAAM,KAAK,UAAf,EAA2B;AACzB,WAAO;AACLC,MAAAA,UAAU,EAAE,wBADP;AAELC,MAAAA,KAAK,EAAE;AAFF,KAAP;AAID,GALD,MAKO,IAAIF,MAAM,KAAK,SAAf,EAA0B;AAC/B,WAAO;AACLC,MAAAA,UAAU,EAAE,WADP;AAELC,MAAAA,KAAK,EAAE;AAFF,KAAP;AAID,GALM,MAKA;AACL,WAAO;AACLD,MAAAA,UAAU,EAAE,SADP;AAELC,MAAAA,KAAK,EAAE;AAFF,KAAP;AAID;AACF,CAjBD;;AAmBA,MAAMC,UAAU,GAAG,QAA8C;AAAA;;AAAA,MAA7C;AAAEC,IAAAA,iBAAF;AAAqBC,IAAAA;AAArB,GAA6C;AAC/D,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCnB,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAACoB,QAAD,EAAWC,WAAX,IAA0BrB,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACsB,SAAD,EAAYC,YAAZ,IAA4BvB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM,CAACwB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC,EAAD,CAA9C;AACA,QAAM,CAAC0B,IAAD,EAAOC,OAAP,IAAkB3B,QAAQ,CAAC,IAAD,CAAhC;AACA,QAAM,CAAC4B,IAAD,EAAOC,OAAP,IAAkB7B,QAAQ,CAAC,CAC/B;AACE8B,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,UAAU,EAAE,KAFd;AAGEC,IAAAA,IAAI,EAAE,YAHR;AAIEpB,IAAAA,MAAM,EAAE,UAJV;AAKEQ,IAAAA,QAAQ,EAAEX;AALZ,GAD+B,EAQ/B;AACEqB,IAAAA,IAAI,EAAE,SADR;AAEEC,IAAAA,UAAU,EAAE,KAFd;AAGEC,IAAAA,IAAI,EAAE,YAHR;AAIEpB,IAAAA,MAAM,EAAE,SAJV;AAKEQ,IAAAA,QAAQ,EAAEV;AALZ,GAR+B,CAAD,CAAhC;;AAiBA,QAAMuB,cAAc,GAAG,CAACH,IAAD,EAAOV,QAAP,KAAoB;AACzCD,IAAAA,cAAc,CAACW,IAAD,CAAd;AACAT,IAAAA,WAAW,CAACD,QAAD,CAAX;AACAK,IAAAA,cAAc,CAAC,EAAD,CAAd,CAHyC,CAGrB;;AACpBF,IAAAA,YAAY,CAAC,IAAD,CAAZ;AACD,GALD;;AAOA,QAAMW,gBAAgB,GAAG,MAAM;AAC7BX,IAAAA,YAAY,CAAC,KAAD,CAAZ;;AACA,QAAIG,IAAI,IAAIF,WAAZ,EAAyB;AACvBW,MAAAA,SAAS,CAACjB,WAAD,EAAcM,WAAd,CAAT;AACD;AACF,GALD;;AAOA,QAAMY,YAAY,GAAG,MAAM;AACzB,QAAIV,IAAJ,EAAU;AACR;AACAD,MAAAA,cAAc,CAACD,WAAW,IAAIJ,QAAhB,CAAd,CAFQ,CAEiC;;AACzCiB,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8Bd,WAAW,IAAIJ,QAA7C,EAHQ,CAGgD;;AACxDO,MAAAA,OAAO,CAAC,IAAD,CAAP,CAJQ,CAIO;AAChB,KALD,MAKO;AACL;AACA,YAAMY,KAAK,GAAGC,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAd;AACAF,MAAAA,KAAK,CAACG,IAAN,GAAa,MAAb;AACAH,MAAAA,KAAK,CAACI,MAAN,GAAe,SAAf;;AACAJ,MAAAA,KAAK,CAACK,QAAN,GAAkBC,CAAD,IAAO;AACtB,cAAMC,YAAY,GAAGD,CAAC,CAACE,MAAF,CAASC,KAAT,CAAe,CAAf,CAArB;AACA,cAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;;AACAD,QAAAA,MAAM,CAACE,MAAP,GAAiBN,CAAD,IAAO;AACrBpB,UAAAA,cAAc,CAACoB,CAAC,CAACE,MAAF,CAASK,MAAV,CAAd;AACAzB,UAAAA,OAAO,CAACmB,YAAD,CAAP;AACD,SAHD;;AAIAG,QAAAA,MAAM,CAACI,aAAP,CAAqBP,YAArB;AACD,OARD;;AASAP,MAAAA,KAAK,CAACe,KAAN;AACD;AACF,GAtBD;;AAwBA,QAAMC,YAAY,GAAG,MAAM;AACzB;AACAlB,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACD,GAHD;;AAKA,QAAMH,SAAS,GAAG,CAACL,IAAD,EAAON,WAAP,KAAuB;AACvC,UAAMgC,WAAW,GAAG5B,IAAI,CAAC6B,GAAL,CAAUC,GAAD,IAAS;AACpC,UAAIA,GAAG,CAAC5B,IAAJ,KAAaA,IAAjB,EAAuB;AACrB,eAAO,EAAE,GAAG4B,GAAL;AAAUtC,UAAAA,QAAQ,EAAEI;AAApB,SAAP;AACD;;AACD,aAAOkC,GAAP;AACD,KALmB,CAApB;AAMA7B,IAAAA,OAAO,CAAC2B,WAAD,CAAP;AACD,GARD;;AAUA,sBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,cAAD;AACE,MAAA,SAAS,EAAEjD,KADb;AAEE,MAAA,KAAK,EAAE;AACLoD,QAAAA,SAAS,EAAE,6BADN;AAELC,QAAAA,SAAS,EAAE,OAFN;AAGLC,QAAAA,SAAS,EAAE;AAHN,OAFT;AAAA,6BAQE,QAAC,KAAD;AAAO,QAAA,EAAE,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ,SAAX;AAA8B,sBAAW,cAAzC;AAAA,gCACE,QAAC,SAAD;AAAA,iCACE,QAAC,QAAD;AAAA,oCACE,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAHF,eAIE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eASE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE;AAAEhD,YAAAA,KAAK,EAAE;AAAT,WAAlB;AAAA,oBACGc,IAAI,CAAC6B,GAAL,CAAUC,GAAD,iBACR,QAAC,QAAD;AAEE,YAAA,EAAE,EAAE;AACF,kDAAoC;AAAEK,gBAAAA,MAAM,EAAE;AAAV,eADlC;AAEFC,cAAAA,MAAM,EAAE,SAFN;AAGFC,cAAAA,eAAe,EACb/C,WAAW,KAAKwC,GAAG,CAAC5B,IAApB,GAA2B,WAA3B,GAAyC;AAJzC,aAFN;AAQE,YAAA,OAAO,EAAE,MAAMG,cAAc,CAACyB,GAAG,CAAC5B,IAAL,EAAW4B,GAAG,CAACtC,QAAf,CAR/B;AAAA,oCAUE,QAAC,SAAD;AAAW,cAAA,SAAS,EAAC,IAArB;AAA0B,cAAA,KAAK,EAAC,KAAhC;AAAA,wBACGsC,GAAG,CAAC5B;AADP;AAAA;AAAA;AAAA;AAAA,oBAVF,eAaE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,MAAjB;AAAA,wBAAyB4B,GAAG,CAAC3B;AAA7B;AAAA;AAAA;AAAA;AAAA,oBAbF,eAcE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,MAAjB;AAAA,wBAAyB2B,GAAG,CAAC1B;AAA7B;AAAA;AAAA;AAAA;AAAA,oBAdF,eAeE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC,MAAjB;AAAA,qCACE;AAAM,gBAAA,SAAS,EAAC,QAAhB;AAAyB,gBAAA,KAAK,EAAErB,SAAS,CAAC+C,GAAG,CAAC9C,MAAL,CAAzC;AAAA,0BACG8C,GAAG,CAAC9C;AADP;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAfF;AAAA,aACO8C,GAAG,CAAC5B,IADX;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AARF;AAAA;AAAA;AAAA;AAAA,YAFF,eA8CE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAER,SAAb;AAAwB,MAAA,OAAO,EAAEY,gBAAjC;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,OAAf;AAAuB,QAAA,KAAK,EAAE;AAAEgC,UAAAA,SAAS,EAAE;AAAb,SAA9B;AAAA,gCACE;AAAA,oBAAKhD;AAAL;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,UAAA,GAAG,EAAEM,WAAW,IAAIJ,QADtB;AAEE,UAAA,GAAG,EAAC,SAFN;AAGE,UAAA,KAAK,EAAE;AACL+C,YAAAA,QAAQ,EAAE,MADL;AAELP,YAAAA,SAAS,EAAE,MAFN;AAGLQ,YAAAA,MAAM,EAAE,MAHH;AAILC,YAAAA,OAAO,EAAE;AAJJ;AAHT;AAAA;AAAA;AAAA;AAAA,gBAFF,eAYE;AAAA,kCACE;AACE,YAAA,KAAK,EAAE;AAAEJ,cAAAA,eAAe,EAAE,SAAnB;AAA8BK,cAAAA,WAAW,EAAE;AAA3C,aADT;AAEE,YAAA,OAAO,EAAElC,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAOE;AACE,YAAA,KAAK,EAAE;AAAE6B,cAAAA,eAAe,EAAE;AAAnB,aADT;AAEE,YAAA,OAAO,EAAEV,YAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPF;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YA9CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA8ED,CA1JD;;GAAMxC,U;;KAAAA,U;AA4JN,eAAeA,UAAf","sourcesContent":["import React, { useState } from \"react\";\nimport Table from \"@mui/material/Table\";\nimport TableBody from \"@mui/material/TableBody\";\nimport TableCell from \"@mui/material/TableCell\";\nimport TableContainer from \"@mui/material/TableContainer\";\nimport TableHead from \"@mui/material/TableHead\";\nimport TableRow from \"@mui/material/TableRow\";\nimport Paper from \"@mui/material/Paper\";\nimport Modal from \"@mui/material/Modal\";\nimport dumbbellImage from \"../assets/dumbbell.png\";\nimport barImage from \"../assets/bar.png\";\nimport \"./Table.css\";\n\nconst makeStyle = (status) => {\n  if (status === \"Approved\") {\n    return {\n      background: \"rgb(145 254 159 / 47%)\",\n      color: \"green\",\n    };\n  } else if (status === \"Pending\") {\n    return {\n      background: \"#ffadad8f\",\n      color: \"red\",\n    };\n  } else {\n    return {\n      background: \"#59bfff\",\n      color: \"white\",\n    };\n  }\n};\n\nconst BasicTable = ({ handleUpdateOrder, handleDeleteOrder }) => {\n  const [selectedRow, setSelectedRow] = useState(null);\n  const [imageUrl, setImageUrl] = useState(\"\");\n  const [modalOpen, setModalOpen] = useState(false);\n  const [newImageUrl, setNewImageUrl] = useState(\"\");\n  const [file, setFile] = useState(null);\n  const [rows, setRows] = useState([\n    {\n      name: \"Dumbbells\",\n      trackingId: 12345,\n      date: \"2024-05-26\",\n      status: \"Approved\",\n      imageUrl: dumbbellImage,\n    },\n    {\n      name: \"Gym Bar\",\n      trackingId: 67890,\n      date: \"2024-05-25\",\n      status: \"Pending\",\n      imageUrl: barImage,\n    },\n  ]);\n\n  const handleRowClick = (name, imageUrl) => {\n    setSelectedRow(name);\n    setImageUrl(imageUrl);\n    setNewImageUrl(\"\"); // Reset new image URL\n    setModalOpen(true);\n  };\n\n  const handleCloseModal = () => {\n    setModalOpen(false);\n    if (file && newImageUrl) {\n      updateRow(selectedRow, newImageUrl);\n    }\n  };\n\n  const handleUpdate = () => {\n    if (file) {\n      // Perform update logic with new image\n      setNewImageUrl(newImageUrl || imageUrl); // Use new image URL if provided, otherwise keep the current image URL\n      console.log(\"Image updated:\", newImageUrl || imageUrl); // Log the updated image URL\n      setFile(null); // Reset file state\n    } else {\n      // Prompt user to select a file\n      const input = document.createElement(\"input\");\n      input.type = \"file\";\n      input.accept = \"image/*\";\n      input.onchange = (e) => {\n        const selectedFile = e.target.files[0];\n        const reader = new FileReader();\n        reader.onload = (e) => {\n          setNewImageUrl(e.target.result);\n          setFile(selectedFile);\n        };\n        reader.readAsDataURL(selectedFile);\n      };\n      input.click();\n    }\n  };\n\n  const handleDelete = () => {\n    // Implement delete functionality here\n    console.log(\"Delete button clicked\");\n  };\n\n  const updateRow = (name, newImageUrl) => {\n    const updatedRows = rows.map((row) => {\n      if (row.name === name) {\n        return { ...row, imageUrl: newImageUrl };\n      }\n      return row;\n    });\n    setRows(updatedRows);\n  };\n\n  return (\n    <div className=\"Table\">\n      <h3>Recent Gym Orders</h3>\n      <TableContainer\n        component={Paper}\n        style={{\n          boxShadow: \"0px 13px 20px 0px #80808029\",\n          maxHeight: \"400px\",\n          overflowY: \"scroll\",\n        }}\n      >\n        <Table sx={{ minWidth: 650 }} aria-label=\"simple table\">\n          <TableHead>\n            <TableRow>\n              <TableCell>Product</TableCell>\n              <TableCell align=\"left\">Tracking ID</TableCell>\n              <TableCell align=\"left\">Date</TableCell>\n              <TableCell align=\"left\">Status</TableCell>\n            </TableRow>\n          </TableHead>\n          <TableBody style={{ color: \"white\" }}>\n            {rows.map((row) => (\n              <TableRow\n                key={row.name}\n                sx={{\n                  \"&:last-child td, &:last-child th\": { border: 0 },\n                  cursor: \"pointer\",\n                  backgroundColor:\n                    selectedRow === row.name ? \"lightgray\" : \"inherit\",\n                }}\n                onClick={() => handleRowClick(row.name, row.imageUrl)}\n              >\n                <TableCell component=\"th\" scope=\"row\">\n                  {row.name}\n                </TableCell>\n                <TableCell align=\"left\">{row.trackingId}</TableCell>\n                <TableCell align=\"left\">{row.date}</TableCell>\n                <TableCell align=\"left\">\n                  <span className=\"status\" style={makeStyle(row.status)}>\n                    {row.status}\n                  </span>\n                </TableCell>\n              </TableRow>\n            ))}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <Modal open={modalOpen} onClose={handleCloseModal}>\n        <div className=\"Modal\" style={{ textAlign: \"center\" }}>\n          <h3>{selectedRow}</h3>\n          <img\n            src={newImageUrl || imageUrl}\n            alt=\"Product\"\n            style={{\n              maxWidth: \"100%\",\n              maxHeight: \"80vh\",\n              margin: \"auto\",\n              display: \"block\",\n            }}\n          />\n          <div>\n            <button\n              style={{ backgroundColor: \"magenta\", marginRight: \"10px\" }}\n              onClick={handleUpdate}\n            >\n              Update\n            </button>\n            <button\n              style={{ backgroundColor: \"magenta\" }}\n              onClick={handleDelete}\n            >\n              Delete\n            </button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default BasicTable;\n"]},"metadata":{},"sourceType":"module"}