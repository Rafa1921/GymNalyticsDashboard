{"ast":null,"code":"var _jsxFileName = \"/Users/gela/Downloads/Gym dashboard analytics/src/components/Login.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport \"./Login.css\"; // Ensure to import the CSS file\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  const validateForm = () => {\n    if (!email) {\n      setError(\"Email is required\");\n      return false;\n    }\n\n    if (!password) {\n      setError(\"Password is required\");\n      return false;\n    }\n\n    return true;\n  };\n\n  const handleLogin = () => {\n    setError(\"\"); // Clear previous error message\n\n    if (!validateForm()) return; // Retrieve the registered user information\n\n    const registeredUser = JSON.parse(localStorage.getItem(\"registeredUser\"));\n\n    if (!registeredUser || email !== registeredUser.email) {\n      setError(\"Incorrect email\");\n    } else if (password !== registeredUser.password) {\n      setError(\"Incorrect password\");\n    } else {\n      localStorage.setItem(\"isAuthenticated\", \"true\");\n      navigate(\"/dashboard\");\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"login-container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-header\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 19\n      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"login-form\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Email:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"email\",\n                placeholder: \"Email\",\n                value: email,\n                onChange: e => setEmail(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"password\",\n                placeholder: \"Password\",\n                value: password,\n                onChange: e => setPassword(e.target.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: /*#__PURE__*/_jsxDEV(\"td\", {\n              colSpan: \"2\",\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: handleLogin,\n                children: \"Login\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Don't have an account? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/register\",\n          children: \"Register here\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 34\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"Ktx5ktSKAplPJrsY5gRTpmAHqe0=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/gela/Downloads/Gym dashboard analytics/src/components/Login.js"],"names":["React","useState","useNavigate","Link","Login","email","setEmail","password","setPassword","error","setError","navigate","validateForm","handleLogin","registeredUser","JSON","parse","localStorage","getItem","setItem","e","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate, Link } from \"react-router-dom\";\nimport \"./Login.css\"; // Ensure to import the CSS file\n\nconst Login = () => {\n  const [email, setEmail] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  const validateForm = () => {\n    if (!email) {\n      setError(\"Email is required\");\n      return false;\n    }\n    if (!password) {\n      setError(\"Password is required\");\n      return false;\n    }\n    return true;\n  };\n\n  const handleLogin = () => {\n    setError(\"\"); // Clear previous error message\n    if (!validateForm()) return;\n\n    // Retrieve the registered user information\n    const registeredUser = JSON.parse(localStorage.getItem(\"registeredUser\"));\n\n    if (!registeredUser || email !== registeredUser.email) {\n      setError(\"Incorrect email\");\n    } else if (password !== registeredUser.password) {\n      setError(\"Incorrect password\");\n    } else {\n      localStorage.setItem(\"isAuthenticated\", \"true\");\n      navigate(\"/dashboard\");\n    }\n  };\n\n  return (\n    <div className=\"login-container\">\n      <div className=\"login-box\">\n        <h2 className=\"login-header\">Login</h2>\n        {error && <p className=\"error-message\">{error}</p>}\n        <table className=\"login-form\">\n          <tbody>\n            <tr>\n              <td>Email:</td>\n              <td>\n                <input\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td>Password:</td>\n              <td>\n                <input\n                  type=\"password\"\n                  placeholder=\"Password\"\n                  value={password}\n                  onChange={(e) => setPassword(e.target.value)}\n                />\n              </td>\n            </tr>\n            <tr>\n              <td colSpan=\"2\">\n                <button onClick={handleLogin}>Login</button>\n              </td>\n            </tr>\n          </tbody>\n        </table>\n        <p>\n          Don't have an account? <Link to=\"/register\">Register here</Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n"]},"metadata":{},"sourceType":"module"}